name: Workflow CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: # Allows manual triggering

jobs:
  train_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set up job
        run: echo "Setting up job..."

      - name: Run actions/checkout@v3
        uses: actions/checkout@v3

      - name: Set up Python 3.12.7
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.7"

      - name: Check Env
        run: |
          python --version
          pip --version
          env | sort

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy scikit-learn mlflow matplotlib seaborn
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f MLProject/requirements.txt ]; then pip install -r MLProject/requirements.txt; fi

      - name: Run mlflow project
        shell: bash -l {0}
        working-directory: ./MLProject
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
          DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
        run: |
          mkdir -p data models
          echo "Ensuring data exists for demonstration"
          if [ -f "data/preprocessed_data.csv" ]; then
            echo "Using existing preprocessed data"
          else
            echo "Creating sample data for demonstration"
            echo "feature1,feature2,target,AH" > data/preprocessed_data.csv
            echo "1.0,2.0,0,50.5" >> data/preprocessed_data.csv
            echo "2.0,3.0,1,55.2" >> data/preprocessed_data.csv
            echo "3.0,4.0,0,48.9" >> data/preprocessed_data.csv
            echo "4.0,5.0,1,52.7" >> data/preprocessed_data.csv
          fi
          # Run MLflow Project
          python modelling.py \
            --data_path=data/preprocessed_data.csv \
            --model_output=models/model.pkl \
            --test_size=0.2 \
            --random_state=42

      - name: Get latest MLflow run_id
        working-directory: ./MLProject
        run: |
          # Contoh perintah untuk mendapatkan run_id terakhir
          echo "RUN_ID=$(mlflow runs list -v | grep -v 'Run ID' | head -1 | awk '{print $4}')" >> $GITHUB_ENV
          echo "Latest MLflow run_id: ${{ env.RUN_ID }}"
